plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'com.gladed.androidgitversion' version '0.4.9'
}

android {
    compileSdkVersion androidCompileSdkVersion

    defaultConfig {
        applicationId "com.sygic.samples"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargerSdkVersion
        versionCode androidGitVersion.code()
        versionName androidGitVersion.name()
        archivesBaseName = "app-sample-$versionName"

        gradle.resolveFlavors(it)

        manifestPlaceholders = [sygicApiKey: gradle.getSdkKey()]
        buildConfigField "String", "SDK_VERSION", "\"${sygicSdkVersion}\""
    }

    signingConfigs {
        release {
            keyAlias System.getenv('RELEASE_KEY_ALIAS')
            keyPassword System.getenv('RELEASE_KEY_PASSWORD')
            storeFile file(rootDir.getCanonicalPath() + '/' + System.getenv('RELEASE_KEYSTORE_FILE'))
            storePassword System.getenv('RELEASE_KEYSTORE_PASSWORD')
        }
    }

    buildTypes {
        all {
            buildConfigField "String", "GITHUB_REPO", '"https://github.com/Sygic/sygic-maps-kit-android/"'
            buildConfigField "String", "GITHUB_WIKI", '"https://github.com/Sygic/sygic-maps-kit-android/wiki/"'
            buildConfigField "String", "STACK_OVERFLOW", '"https://stackoverflow.com/questions/tagged/android+sygic"'
        }

        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    androidGitVersion {
        codeFormat 'AMMNNPP'
        format '%tag%%-dirty%'
        variants applicationVariants
    }

    splits {
        abi {
            enable true
            reset()
            include (*supportedAbis)
            universalApk false
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':module-browsemap')
}
